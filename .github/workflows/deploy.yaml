name: Deploy Dockerized Python Web App to EC2

on:
  push:
    branches:
      - main
      - feat/AWS_workflow

permissions:
  id-token: write   # Required for requesting the JWT
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: SSH into EC2 and Deploy Application
        uses: appleboy/ssh-action@master
        with:
          host: 13.49.221.159
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Docker if not installed
            if ! [ -x "$(command -v docker)" ]; then
              sudo apt-get update
              sudo apt-get install -y docker.io
            fi

            # Remove existing Docker container if running
            docker stop python-web-app || true
            docker rm python-web-app || true

            # Create a directory for the application code
            mkdir -p ~/app

            # Remove any existing files and clone the latest version of the code
            rm -rf ~/app/*
            git clone https://github.com/AlinaZabavkina/pyforge-python-school-3 ~/app

            # Build Docker image from the new code
            cd ~/app
            docker build -f docker/Dockerfile -t python-web-app .

            # Run the Docker container, mapping port 80
            docker run -d --name python-web-app -p 80:80 python-web-app

            # Verify the container is running
            docker ps -a

name: Deploy Dockerized Python Web App to EC2

on:
  push:
    branches:
      - main
      - feat/AWS_workflow

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: SSH into EC2 and Deploy Application
        uses: appleboy/ssh-action@master
        with:
          host: 13.49.221.159
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Docker if not installed
            if ! [ -x "$(command -v docker)" ]; then
              sudo apt-get update
              sudo apt-get install -y docker.io
            fi

            # Create a directory for the application code
            mkdir -p ~/app

            # Remove any existing files and sync the application code from GitHub
            rm -rf ~/app/*
            exit # TEMP_REMOVE
            
             # Build Docker image from the new code
            docker build -f docker/Dockerfile . -t python-web-app .
            docker images # List Docker images to check if build was successful

            # Run the Docker container
            docker run -d --name python-web-app -p 80:80 python-web-app || docker logs python-web-app
      
            # Verify the container is running
            docker ps -a

#      - name: Build Docker image and run container
#        run:
